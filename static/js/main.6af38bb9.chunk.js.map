{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","fruit","imageurl","alt","tfvname","botname","CardList","fruits","map","id","Search","placeholder","type","handleChange","onChange","App","handle","p","setState","searchField","target","value","console","log","state","Fruits","fetch","then","res","json","result","results","this","FilteredFruits","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAKF,EAAMG,MAAMC,SAAUC,IAAI,UACpC,+BAAML,EAAMG,MAAMG,QAAlB,OACA,8BAAKN,EAAMG,MAAMI,QAAjB,WCFKC,EAAW,SAAAR,GAAK,OAE7B,qBAAKC,UAAU,YAAf,SAEOD,EAAMS,OAAOC,KAAI,SAAAP,GAAK,OACpB,cAAC,EAAD,CAAsBA,MAAOA,GAAjBA,EAAMQ,UCLdC,G,MAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,aAArB,OAClB,uBAAOd,UAAU,SACjBY,YAAaA,EACbC,KAAMA,EACNE,SAAUD,MCJOE,E,kDAEnB,aAAc,IAAD,8BACX,gBAcHC,OAAS,SAACC,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,QAAQ,kBAAKC,QAAQC,IAAI,EAAKC,MAAML,iBAbrE,EAAKK,MAAQ,CACXC,OAAO,GACPN,YAAY,IALH,E,qDASb,WAAqB,IAAD,OAClBO,MAAM,gEACNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAAD,OAAY,EAAKZ,SAAS,CAACO,OAAQK,EAAOC,e,oBAQjD,WAAU,IAAD,EAEyBC,KAAKR,MAA7BC,EAFD,EAECA,OAAQN,EAFT,EAESA,YAEVc,EAAiBR,EAAOS,QAAO,SAAAjC,GAAK,OACxCA,EAAMG,QAAQ+B,cAAcC,SAASjB,EAAYgB,kBAGnD,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,CACAa,KAAM,SACND,YAAa,gBACbE,aAAcmB,KAAKhB,SACnB,cAAC,EAAD,CAAUT,OAAQ0B,W,GApCOI,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6af38bb9.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\nexport const Card = props=> (\n    <div className={'card-container'}>\n        <img src={props.fruit.imageurl} alt=\"fruit\"/>\n        <h3 >{props.fruit.tfvname} </h3>\n        <p >{props.fruit.botname} </p>    \n</div>\n);","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => (\n\n<div className='card-list'>\n         {\n       props.fruits.map(fruit=> (\n         <Card key ={fruit.id} fruit={fruit} />\n         \n         ))}\n</div>\n);\n","import React from 'react';\nimport './search-box.styles.css';\n\n\nexport const Search = ({placeholder, type, handleChange}) => (\n    <input className=\"search\"\n    placeholder={placeholder}\n    type={type}\n    onChange={handleChange}\n    />\n);","import React, { Component } from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport { Search } from './components/search/search.component';\nexport default class App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      Fruits:[],\n      searchField:''\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://tropicalfruitandveg.com/api/tfvjsonapi.php?search=all').\n    then(res => res.json()).\n    then((result) => this.setState({Fruits:(result.results)}) )\n  }\n\n handle = (p) => {\nthis.setState({searchField: p.target.value}, ()=> console.log(this.state.searchField))\n};\n\n\n  render() {\n\n    const { Fruits, searchField } = this.state;\n\n    const FilteredFruits = Fruits.filter(fruit =>\n      fruit.tfvname.toLowerCase().includes(searchField.toLowerCase()))\n    \n\n    return (\n      <div className=\"App\">\n        <Search\n        type={'search'}   \n        placeholder={'Search Fruits'}     \n        handleChange={this.handle} />\n        <CardList fruits={FilteredFruits}/>\n      </div>\n    )\n  }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}